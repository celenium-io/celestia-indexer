name: Build
permissions:
  contents: read
  pull-requests: read
  packages: write
on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'master'

jobs:
  # Indexer
  build_indexer:
    name: Build Indexer
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      DOCKER_REGISTRY: ghcr.io
      DOCKER_IMAGE_BASE: ${{ github.repository }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Indexer validate build configuration
        uses: docker/build-push-action@v6
        with:
          context: .
          call: check
          file: build/indexer/Dockerfile

      - name: Indexer image tags & labels
        id: meta-indexer
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_BASE }}

      - name: Indexer image build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: build/indexer/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta-indexer.outputs.tags }}
          labels: ${{ steps.meta-indexer.outputs.labels }}

  # API
  build_api:
    name: Build API
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      DOCKER_REGISTRY: ghcr.io
      DOCKER_IMAGE_BASE: ${{ github.repository }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: API validate build configuration
        uses: docker/build-push-action@v6
        with:
          context: .
          call: check
          file: build/api/Dockerfile

      - name: API image tags & labels
        id: meta-api
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_BASE }}-api

      - name: API image build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: build/api/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta-api.outputs.tags }}
          labels: ${{ steps.meta-api.outputs.labels }}

  # Private API
  build_private_api:
    name: Build Private API
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      DOCKER_REGISTRY: ghcr.io
      DOCKER_IMAGE_BASE: ${{ github.repository }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Private API validate build configuration
        uses: docker/build-push-action@v6
        with:
          context: .
          call: check
          file: build/private_api/Dockerfile

      - name: Private API image tags & labels
        id: meta-private-api
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_BASE }}-private-api

      - name: Private API image build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: build/private_api/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta-private-api.outputs.tags }}
          labels: ${{ steps.meta-private-api.outputs.labels }}

  # Celestials
  build_celestials:
    name: Build Celestails
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      DOCKER_REGISTRY: ghcr.io
      DOCKER_IMAGE_BASE: ${{ github.repository }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Private API validate build configuration
        uses: docker/build-push-action@v6
        with:
          context: .
          call: check
          file: build/private_api/Dockerfile

      - name: Celestials validate build configuration
        uses: docker/build-push-action@v6
        with:
          context: .
          call: check
          file: build/celestials/Dockerfile

      - name: Celestials image tags & labels
        id: meta-celestials
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_BASE }}-celestials

      - name: Celestials image build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: build/celestials/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta-celestials.outputs.tags }}
          labels: ${{ steps.meta-celestials.outputs.labels }}

  # Json Rpc
  build_jsonrpc:
    name: Build Json RPC
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      DOCKER_REGISTRY: ghcr.io
      DOCKER_IMAGE_BASE: ${{ github.repository }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Json RPC validate build configuration
        uses: docker/build-push-action@v6
        with:
          context: .
          call: check
          file: build/jsonrpc/Dockerfile

      - name: Json RPC image tags & labels
        id: meta-jsonrpc
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_BASE }}-jsonrpc

      - name: Json RPC image build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: build/jsonrpc/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta-jsonrpc.outputs.tags }}
          labels: ${{ steps.meta-jsonrpc.outputs.labels }}
