definitions:
  SearchResponse-responses_Searchable:
    properties:
      result:
        description: 'Search result. Can be one of folowwing types: Block, Address,
          Namespace, Tx'
        type: object
      type:
        description: Result type which is in the result. Can be 'block', 'address',
          'namespace', 'tx'
        type: string
    type: object
  github_com_celenium-io_celestia-indexer_internal_storage_types.Status:
    enum:
    - success
    - failed
    type: string
    x-enum-varnames:
    - StatusSuccess
    - StatusFailed
  handler.Error:
    properties:
      message:
        type: string
    type: object
  responses.Address:
    description: Celestia address information
    properties:
      balance:
        $ref: '#/definitions/responses.Balance'
      first_height:
        example: 100
        type: integer
      hash:
        example: celestia1jc92qdnty48pafummfr8ava2tjtuhfdw774w60
        type: string
      id:
        example: 321
        type: integer
      last_height:
        example: 100
        type: integer
    type: object
  responses.Balance:
    description: Balance of address information
    properties:
      currency:
        example: utia
        type: string
      value:
        example: "10000000000"
        type: string
    type: object
  responses.Blob:
    properties:
      commitment:
        example: vbGakK59+Non81TE3ULg5Ve5ufT9SFm/bCyY+WLR3gg=
        format: base64
        type: string
      content_type:
        example: image/png
        format: string
        type: string
      data:
        example: b2sgZGVtbyBkYQ==
        format: base64
        type: string
      namespace:
        example: AAAAAAAAAAAAAAAAAAAAAAAAAAAAs2bWWU6FOB0=
        format: base64
        type: string
      share_version:
        example: 0
        format: integer
        type: integer
    type: object
  responses.BlobLog:
    properties:
      commitment:
        example: vbGakK59+Non81TE3ULg5Ve5ufT9SFm/bCyY+WLR3gg=
        format: base64
        type: string
      content_type:
        example: image/png
        format: string
        type: string
      height:
        example: 100
        format: integer
        type: integer
      namespace:
        $ref: '#/definitions/responses.Namespace'
      signer:
        example: celestia1jc92qdnty48pafummfr8ava2tjtuhfdw774w60
        format: string
        type: string
      size:
        example: 10
        format: integer
        type: integer
      time:
        example: "2023-07-04T03:10:57+00:00"
        format: date-time
        type: string
      tx:
        $ref: '#/definitions/responses.Tx'
    type: object
  responses.Block:
    properties:
      app_hash:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        type: string
      consensus_hash:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        type: string
      data_hash:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        type: string
      evidence_hash:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        type: string
      hash:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        type: string
      height:
        example: 100
        type: integer
      id:
        example: 321
        type: integer
      last_commit_hash:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        type: string
      last_results_hash:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        type: string
      message_types:
        example:
        - MsgSend
        - MsgUnjail
        items:
          type: string
        type: array
      next_validators_hash:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        type: string
      parent_hash:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        type: string
      proposer:
        $ref: '#/definitions/responses.ShortValidator'
      stats:
        $ref: '#/definitions/responses.BlockStats'
      time:
        example: "2023-07-04T03:10:57+00:00"
        type: string
      validators_hash:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        type: string
      version_app:
        example: "1"
        type: string
      version_block:
        example: "11"
        type: string
    type: object
  responses.BlockStats:
    properties:
      blobs_size:
        example: 12354
        type: integer
      block_time:
        example: 12354
        type: integer
      bytes_in_block:
        example: 1234
        type: integer
      events_count:
        example: 18
        type: integer
      fee:
        example: "28347628346"
        type: string
      fill_rate:
        example: "0.0800"
        type: string
      gas_limit:
        example: 1234
        type: integer
      gas_used:
        example: 1234
        type: integer
      inflation_rate:
        example: "0.0800000"
        type: string
      messages_counts:
        example: '{MsgPayForBlobs:10,MsgUnjail:1}'
        type: string
      supply_change:
        example: "8635234"
        type: string
      tx_count:
        example: 12
        type: integer
    type: object
  responses.Constants:
    properties:
      denom_metadata:
        items:
          $ref: '#/definitions/responses.DenomMetadata'
        type: array
      module:
        additionalProperties:
          $ref: '#/definitions/responses.Params'
        type: object
    type: object
  responses.DenomMetadata:
    properties:
      base:
        example: utia
        type: string
      description:
        example: Some description
        type: string
      display:
        example: TIA
        type: string
      name:
        example: TIA
        type: string
      symbol:
        example: TIA
        type: string
      units:
        items:
          type: integer
        type: array
      uri:
        example: https://example.com
        type: string
    type: object
  responses.Enums:
    properties:
      event_type:
        items:
          type: string
        type: array
      message_type:
        items:
          type: string
        type: array
      status:
        items:
          type: string
        type: array
    type: object
  responses.Event:
    properties:
      data:
        additionalProperties: {}
        type: object
      height:
        example: 100
        format: int64
        type: integer
      id:
        example: 321
        format: int64
        type: integer
      position:
        example: 1
        format: int64
        type: integer
      time:
        example: "2023-07-04T03:10:57+00:00"
        format: date-time
        type: string
      tx_id:
        example: 11
        format: int64
        type: integer
      type:
        allOf:
        - $ref: '#/definitions/types.EventType'
        example: commission
    type: object
  responses.GasPrice:
    properties:
      fast:
        example: "0.1234"
        format: string
        type: string
      median:
        example: "0.1234"
        format: string
        type: string
      slow:
        example: "0.1234"
        format: string
        type: string
    type: object
  responses.HistogramItem:
    properties:
      time:
        example: "2023-07-04T03:10:57+00:00"
        format: date-time
        type: string
      value:
        example: "2223424"
        format: string
        type: string
    type: object
  responses.Message:
    properties:
      data:
        additionalProperties: {}
        type: object
      height:
        example: 100
        format: int64
        type: integer
      id:
        example: 321
        format: int64
        type: integer
      position:
        example: 2
        format: int64
        type: integer
      time:
        example: "2023-07-04T03:10:57+00:00"
        format: date-time
        type: string
      tx:
        $ref: '#/definitions/responses.Tx'
      tx_id:
        example: 11
        format: int64
        type: integer
      type:
        allOf:
        - $ref: '#/definitions/types.MsgType'
        example: MsgCreatePeriodicVestingAccount
    type: object
  responses.MessageForAddress:
    properties:
      data:
        additionalProperties: {}
        type: object
      height:
        example: 100
        format: int64
        type: integer
      id:
        example: 321
        format: int64
        type: integer
      position:
        example: 2
        format: int64
        type: integer
      time:
        example: "2023-07-04T03:10:57+00:00"
        format: date-time
        type: string
      tx:
        $ref: '#/definitions/responses.TxForAddress'
      tx_id:
        example: 11
        format: int64
        type: integer
      type:
        allOf:
        - $ref: '#/definitions/types.MsgType'
        example: MsgCreatePeriodicVestingAccount
    type: object
  responses.Namespace:
    properties:
      blobs_count:
        example: 10000
        format: integer
        type: integer
      hash:
        example: U3dhZ2dlciByb2Nrcw==
        format: base64
        type: string
      id:
        example: 321
        format: integer
        type: integer
      last_height:
        example: 100
        format: int64
        type: integer
      last_message_time:
        example: "2023-07-04T03:10:57+00:00"
        format: date-time
        type: string
      name:
        example: name
        format: string
        type: string
      namespace_id:
        example: 4723ce10b187716adfc55ff7e6d9179c226e6b5440b02577cca49d02
        format: binary
        type: string
      pfb_count:
        example: 12
        format: integer
        type: integer
      reserved:
        example: true
        type: boolean
      size:
        example: 12345
        format: integer
        type: integer
      version:
        format: byte
        type: integer
    type: object
  responses.NamespaceMessage:
    properties:
      data:
        additionalProperties: {}
        type: object
      height:
        example: 100
        format: int64
        type: integer
      id:
        example: 321
        format: int64
        type: integer
      namespace:
        $ref: '#/definitions/responses.Namespace'
      position:
        example: 2
        format: int64
        type: integer
      time:
        example: "2023-07-04T03:10:57+00:00"
        format: date-time
        type: string
      tx:
        $ref: '#/definitions/responses.Tx'
      type:
        enum:
        - MsgWithdrawValidatorCommission
        - MsgWithdrawDelegatorReward
        - MsgEditValidator
        - MsgBeginRedelegate
        - MsgCreateValidator
        - MsgDelegate
        - MsgUndelegate
        - MsgUnjail
        - MsgSend
        - MsgCreateVestingAccount
        - MsgCreatePeriodicVestingAccount
        - MsgPayForBlobs
        - MsgGrantAllowance
        example: MsgCreatePeriodicVestingAccount
        format: string
        type: string
    type: object
  responses.NamespaceUsage:
    properties:
      name:
        example: "00112233"
        format: string
        type: string
      namespace_id:
        example: 4723ce10b187716adfc55ff7e6d9179c226e6b5440b02577cca49d02
        format: binary
        type: string
      size:
        example: 1283518
        format: integer
        type: number
      version:
        format: byte
        type: integer
    type: object
  responses.Params:
    additionalProperties:
      type: string
    type: object
  responses.Price:
    properties:
      close:
        example: "0.17632"
        format: string
        type: string
      high:
        example: "0.17632"
        format: string
        type: string
      low:
        example: "0.17632"
        format: string
        type: string
      open:
        example: "0.17632"
        format: string
        type: string
      time:
        example: "2023-07-04T03:10:57+00:00"
        format: date-time
        type: string
    type: object
  responses.Rollup:
    properties:
      description:
        example: Long rollup description
        format: string
        type: string
      github:
        example: https://github.com/account
        format: string
        type: string
      id:
        example: 321
        format: integer
        type: integer
      logo:
        example: https://some_link.com/image.png
        format: string
        type: string
      name:
        example: Rollup name
        format: string
        type: string
      twitter:
        example: https://x.com/account
        format: string
        type: string
      website:
        example: https://website.com
        format: string
        type: string
    type: object
  responses.RollupWithStats:
    properties:
      blobs_count:
        example: 2
        format: integer
        type: integer
      description:
        example: Long rollup description
        format: string
        type: string
      github:
        example: https://github.com/account
        format: string
        type: string
      id:
        example: 321
        format: integer
        type: integer
      last_message_time:
        example: "2023-07-04T03:10:57+00:00"
        format: date-time
        type: string
      logo:
        example: https://some_link.com/image.png
        format: string
        type: string
      name:
        example: Rollup name
        format: string
        type: string
      size:
        example: 1000
        format: integer
        type: integer
      twitter:
        example: https://x.com/account
        format: string
        type: string
      website:
        example: https://website.com
        format: string
        type: string
    type: object
  responses.SeriesItem:
    properties:
      max:
        example: "0.17632"
        format: string
        type: string
      min:
        example: "0.17632"
        format: string
        type: string
      time:
        example: "2023-07-04T03:10:57+00:00"
        format: date-time
        type: string
      value:
        example: "0.17632"
        format: string
        type: string
    type: object
  responses.ShortValidator:
    properties:
      cons_address:
        example: E641C7A2C964833E556AEF934FBF166B712874B6
        type: string
      id:
        example: 321
        type: integer
      moniker:
        example: Easy 2 Stake
        type: string
    type: object
  responses.State:
    properties:
      hash:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        format: string
        type: string
      id:
        example: 321
        format: int64
        type: integer
      last_height:
        example: 100
        format: int64
        type: integer
      last_time:
        example: "2023-07-04T03:10:57+00:00"
        format: date-time
        type: string
      name:
        example: indexer
        format: string
        type: string
      synced:
        example: true
        format: boolean
        type: boolean
      total_accounts:
        example: 43
        format: int64
        type: integer
      total_blobs_size:
        example: 56789
        format: int64
        type: integer
      total_fee:
        example: "312"
        format: string
        type: string
      total_supply:
        example: "312"
        format: string
        type: string
      total_tx:
        example: 23456
        format: int64
        type: integer
    type: object
  responses.TPS:
    properties:
      change_last_hour_pct:
        example: 0.275
        format: float
        type: number
      current:
        example: 0.567
        format: float
        type: number
      high:
        example: 1.023
        format: float
        type: number
      low:
        example: 0.123
        format: float
        type: number
    type: object
  responses.Tx:
    properties:
      codespace:
        example: sdk
        format: string
        type: string
      error:
        example: ""
        format: string
        type: string
      events_count:
        example: 2
        format: int64
        type: integer
      fee:
        example: "9348"
        format: int64
        type: string
      gas_used:
        example: 4253
        format: int64
        type: integer
      gas_wanted:
        example: 9348
        format: int64
        type: integer
      hash:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        format: binary
        type: string
      height:
        example: 100
        format: int64
        type: integer
      id:
        example: 321
        format: int64
        type: integer
      memo:
        example: Transfer to private account
        format: string
        type: string
      message_types:
        example:
        - MsgSend
        - MsgUnjail
        items:
          $ref: '#/definitions/types.MsgType'
        type: array
      messages:
        items:
          $ref: '#/definitions/responses.Message'
        type: array
      messages_count:
        example: 1
        format: int64
        type: integer
      position:
        example: 11
        format: int64
        type: integer
      status:
        allOf:
        - $ref: '#/definitions/github_com_celenium-io_celestia-indexer_internal_storage_types.Status'
        example: success
      time:
        example: "2023-07-04T03:10:57+00:00"
        format: date-time
        type: string
      timeout_height:
        example: 0
        format: int64
        type: integer
    type: object
  responses.TxCountHistogramItem:
    properties:
      count:
        example: 2223424
        format: integer
        type: integer
      time:
        example: "2023-07-04T03:10:57+00:00"
        format: date-time
        type: string
      tps:
        example: 0.13521
        format: float
        type: number
    type: object
  responses.TxForAddress:
    properties:
      fee:
        example: "9348"
        format: int64
        type: string
      hash:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        format: binary
        type: string
      message_types:
        example:
        - MsgSend
        - MsgUnjail
        items:
          $ref: '#/definitions/types.MsgType'
        type: array
      messages_count:
        example: 1
        format: int64
        type: integer
      status:
        allOf:
        - $ref: '#/definitions/github_com_celenium-io_celestia-indexer_internal_storage_types.Status'
        example: success
    type: object
  responses.Validator:
    properties:
      address:
        example: celestiavaloper1un77nfm6axkhkupe8fk4xl6fd4adz3y59fucpu
        type: string
      cons_address:
        example: E641C7A2C964833E556AEF934FBF166B712874B6
        type: string
      contacts:
        example: security@0xfury.com
        type: string
      delegator:
        example: celestia1un77nfm6axkhkupe8fk4xl6fd4adz3y5qk7ph6
        type: string
      details:
        example: Some long text about validator
        type: string
      id:
        example: 321
        type: integer
      identity:
        example: 2C877AC873132C91
        type: string
      max_change_rate:
        example: "0.01"
        type: string
      max_rate:
        example: "0.1"
        type: string
      min_self_delegation:
        example: "1"
        type: string
      moniker:
        example: Easy 2 Stake
        type: string
      rate:
        example: "0.03"
        type: string
      website:
        example: https://www.easy2stake.com/
        type: string
    type: object
  types.EventType:
    enum:
    - unknown
    - coin_received
    - coinbase
    - coin_spent
    - burn
    - mint
    - message
    - proposer_reward
    - rewards
    - commission
    - liveness
    - transfer
    - celestia.blob.v1.EventPayForBlobs
    - redelegate
    - AttestationRequest
    - withdraw_rewards
    - withdraw_commission
    - set_withdraw_address
    - create_validator
    - delegate
    - edit_validator
    - unbond
    - tx
    - complete_redelegation
    - complete_unbonding
    - use_feegrant
    - revoke_feegrant
    - set_feegrant
    - update_feegrant
    - slash
    - proposal_vote
    - proposal_deposit
    - submit_proposal
    - cosmos.authz.v1beta1.EventGrant
    - send_packet
    - ibc_transfer
    - fungible_token_packet
    - acknowledge_packet
    - create_client
    - update_client
    - connection_open_try
    - connection_open_init
    - connection_open_confirm
    - connection_open_ack
    - channel_open_try
    - channel_open_init
    - channel_open_confirm
    - channel_open_ack
    - recv_packet
    - write_acknowledgement
    - timeout
    - timeout_packet
    - cosmos.authz.v1beta1.EventRevoke
    - cosmos.authz.v1.EventRevoke
    - cancel_unbonding_delegation
    type: string
    x-enum-varnames:
    - EventTypeUnknown
    - EventTypeCoinReceived
    - EventTypeCoinbase
    - EventTypeCoinSpent
    - EventTypeBurn
    - EventTypeMint
    - EventTypeMessage
    - EventTypeProposerReward
    - EventTypeRewards
    - EventTypeCommission
    - EventTypeLiveness
    - EventTypeTransfer
    - EventTypeCelestiablobv1EventPayForBlobs
    - EventTypeRedelegate
    - EventTypeAttestationRequest
    - EventTypeWithdrawRewards
    - EventTypeWithdrawCommission
    - EventTypeSetWithdrawAddress
    - EventTypeCreateValidator
    - EventTypeDelegate
    - EventTypeEditValidator
    - EventTypeUnbond
    - EventTypeTx
    - EventTypeCompleteRedelegation
    - EventTypeCompleteUnbonding
    - EventTypeUseFeegrant
    - EventTypeRevokeFeegrant
    - EventTypeSetFeegrant
    - EventTypeUpdateFeegrant
    - EventTypeSlash
    - EventTypeProposalVote
    - EventTypeProposalDeposit
    - EventTypeSubmitProposal
    - EventTypeCosmosauthzv1beta1EventGrant
    - EventTypeSendPacket
    - EventTypeIbcTransfer
    - EventTypeFungibleTokenPacket
    - EventTypeAcknowledgePacket
    - EventTypeCreateClient
    - EventTypeUpdateClient
    - EventTypeConnectionOpenTry
    - EventTypeConnectionOpenInit
    - EventTypeConnectionOpenConfirm
    - EventTypeConnectionOpenAck
    - EventTypeChannelOpenTry
    - EventTypeChannelOpenInit
    - EventTypeChannelOpenConfirm
    - EventTypeChannelOpenAck
    - EventTypeRecvPacket
    - EventTypeWriteAcknowledgement
    - EventTypeTimeout
    - EventTypeTimeoutPacket
    - EventTypeCosmosauthzv1beta1EventRevoke
    - EventTypeCosmosauthzv1EventRevoke
    - EventTypeCancelUnbondingDelegation
  types.MsgType:
    enum:
    - MsgUnknown
    - MsgSetWithdrawAddress
    - MsgWithdrawDelegatorReward
    - MsgWithdrawValidatorCommission
    - MsgFundCommunityPool
    - MsgCreateValidator
    - MsgEditValidator
    - MsgDelegate
    - MsgBeginRedelegate
    - MsgUndelegate
    - MsgCancelUnbondingDelegation
    - MsgUnjail
    - MsgSend
    - MsgMultiSend
    - MsgCreateVestingAccount
    - MsgCreatePermanentLockedAccount
    - MsgCreatePeriodicVestingAccount
    - MsgPayForBlobs
    - MsgGrant
    - MsgExec
    - MsgRevoke
    - MsgGrantAllowance
    - MsgRevokeAllowance
    - MsgRegisterEVMAddress
    - MsgSubmitProposal
    - MsgExecLegacyContent
    - MsgVote
    - MsgVoteWeighted
    - MsgDeposit
    - IBCTransfer
    - MsgVerifyInvariant
    - MsgSubmitEvidence
    - MsgSendNFT
    - MsgCreateGroup
    - MsgUpdateGroupMembers
    - MsgUpdateGroupAdmin
    - MsgUpdateGroupMetadata
    - MsgCreateGroupPolicy
    - MsgUpdateGroupPolicyAdmin
    - MsgCreateGroupWithPolicy
    - MsgUpdateGroupPolicyDecisionPolicy
    - MsgUpdateGroupPolicyMetadata
    - MsgSubmitProposalGroup
    - MsgWithdrawProposal
    - MsgVoteGroup
    - MsgExecGroup
    - MsgLeaveGroup
    - MsgSoftwareUpgrade
    - MsgCancelUpgrade
    - MsgRegisterInterchainAccount
    - MsgSendTx
    - MsgRegisterPayee
    - MsgRegisterCounterpartyPayee
    - MsgPayPacketFee
    - MsgPayPacketFeeAsync
    - MsgTransfer
    - MsgCreateClient
    - MsgUpdateClient
    - MsgUpgradeClient
    - MsgSubmitMisbehaviour
    - MsgConnectionOpenInit
    - MsgConnectionOpenTry
    - MsgConnectionOpenAck
    - MsgConnectionOpenConfirm
    - MsgChannelOpenInit
    - MsgChannelOpenTry
    - MsgChannelOpenAck
    - MsgChannelOpenConfirm
    - MsgChannelCloseInit
    - MsgChannelCloseConfirm
    - MsgRecvPacket
    - MsgTimeout
    - MsgTimeoutOnClose
    - MsgAcknowledgement
    type: string
    x-enum-varnames:
    - MsgUnknown
    - MsgSetWithdrawAddress
    - MsgWithdrawDelegatorReward
    - MsgWithdrawValidatorCommission
    - MsgFundCommunityPool
    - MsgCreateValidator
    - MsgEditValidator
    - MsgDelegate
    - MsgBeginRedelegate
    - MsgUndelegate
    - MsgCancelUnbondingDelegation
    - MsgUnjail
    - MsgSend
    - MsgMultiSend
    - MsgCreateVestingAccount
    - MsgCreatePermanentLockedAccount
    - MsgCreatePeriodicVestingAccount
    - MsgPayForBlobs
    - MsgGrant
    - MsgExec
    - MsgRevoke
    - MsgGrantAllowance
    - MsgRevokeAllowance
    - MsgRegisterEVMAddress
    - MsgSubmitProposal
    - MsgExecLegacyContent
    - MsgVote
    - MsgVoteWeighted
    - MsgDeposit
    - IBCTransfer
    - MsgVerifyInvariant
    - MsgSubmitEvidence
    - MsgSendNFT
    - MsgCreateGroup
    - MsgUpdateGroupMembers
    - MsgUpdateGroupAdmin
    - MsgUpdateGroupMetadata
    - MsgCreateGroupPolicy
    - MsgUpdateGroupPolicyAdmin
    - MsgCreateGroupWithPolicy
    - MsgUpdateGroupPolicyDecisionPolicy
    - MsgUpdateGroupPolicyMetadata
    - MsgSubmitProposalGroup
    - MsgWithdrawProposal
    - MsgVoteGroup
    - MsgExecGroup
    - MsgLeaveGroup
    - MsgSoftwareUpgrade
    - MsgCancelUpgrade
    - MsgRegisterInterchainAccount
    - MsgSendTx
    - MsgRegisterPayee
    - MsgRegisterCounterpartyPayee
    - MsgPayPacketFee
    - MsgPayPacketFeeAsync
    - MsgTransfer
    - MsgCreateClient
    - MsgUpdateClient
    - MsgUpgradeClient
    - MsgSubmitMisbehaviour
    - MsgConnectionOpenInit
    - MsgConnectionOpenTry
    - MsgConnectionOpenAck
    - MsgConnectionOpenConfirm
    - MsgChannelOpenInit
    - MsgChannelOpenTry
    - MsgChannelOpenAck
    - MsgChannelOpenConfirm
    - MsgChannelCloseInit
    - MsgChannelCloseConfirm
    - MsgRecvPacket
    - MsgTimeout
    - MsgTimeoutOnClose
    - MsgAcknowledgement
host: api.celenium.io
info:
  contact: {}
  description: This is docs of Celenium API.
  title: Swagger Celenium API
  version: "1.0"
paths:
  /v1/address:
    get:
      description: List address info
      operationId: list-address
      parameters:
      - description: Count of requested entities
        in: query
        maximum: 100
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Sort order
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Address'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: List address info
      tags:
      - address
  /v1/address/{hash}:
    get:
      description: Get address info
      operationId: get-address
      parameters:
      - description: Hash
        in: path
        maxLength: 48
        minLength: 48
        name: hash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Address'
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get address info
      tags:
      - address
  /v1/address/{hash}/blobs:
    get:
      description: Get blobs pushed by address
      operationId: address-blobs
      parameters:
      - description: Hash
        in: path
        maxLength: 48
        minLength: 48
        name: hash
        required: true
        type: string
      - description: Count of requested entities
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - description: Offset
        in: query
        minimum: 1
        name: offset
        type: integer
      - description: 'Sort order. Default: desc'
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      - description: Sort field. If it's empty internal id is used
        enum:
        - time
        - size
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.BlobLog'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get blobs pushed by address
      tags:
      - address
  /v1/address/{hash}/messages:
    get:
      description: Get address messages
      operationId: address-messages
      parameters:
      - description: Hash
        in: path
        maxLength: 48
        minLength: 48
        name: hash
        required: true
        type: string
      - description: Count of requested entities
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - description: Offset
        in: query
        minimum: 1
        name: offset
        type: integer
      - description: Sort order
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.MessageForAddress'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get address messages
      tags:
      - address
  /v1/address/{hash}/txs:
    get:
      description: Get address transactions
      operationId: address-transactions
      parameters:
      - description: Hash
        in: path
        maxLength: 48
        minLength: 48
        name: hash
        required: true
        type: string
      - description: Count of requested entities
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - description: Offset
        in: query
        minimum: 1
        name: offset
        type: integer
      - description: Sort order
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      - description: Comma-separated status list
        enum:
        - success
        - failed
        in: query
        name: status
        type: string
      - description: Comma-separated message types list
        enum:
        - MsgUnknown
        - MsgSetWithdrawAddress
        - MsgWithdrawDelegatorReward
        - MsgWithdrawValidatorCommission
        - MsgFundCommunityPool
        - MsgCreateValidator
        - MsgEditValidator
        - MsgDelegate
        - MsgBeginRedelegate
        - MsgUndelegate
        - MsgCancelUnbondingDelegation
        - MsgUnjail
        - MsgSend
        - MsgMultiSend
        - MsgCreateVestingAccount
        - MsgCreatePermanentLockedAccount
        - MsgCreatePeriodicVestingAccount
        - MsgPayForBlobs
        - MsgGrant
        - MsgExec
        - MsgRevoke
        - MsgGrantAllowance
        - MsgRevokeAllowance
        - MsgRegisterEVMAddress
        - MsgSubmitProposal
        - MsgExecLegacyContent
        - MsgVote
        - MsgVoteWeighted
        - MsgDeposit
        - IBCTransfer
        - MsgVerifyInvariant
        - MsgSubmitEvidence
        - MsgSendNFT
        - MsgCreateGroup
        - MsgUpdateGroupMembers
        - MsgUpdateGroupAdmin
        - MsgUpdateGroupMetadata
        - MsgCreateGroupPolicy
        - MsgUpdateGroupPolicyAdmin
        - MsgCreateGroupWithPolicy
        - MsgUpdateGroupPolicyDecisionPolicy
        - MsgUpdateGroupPolicyMetadata
        - MsgSubmitProposalGroup
        - MsgWithdrawProposal
        - MsgVoteGroup
        - MsgExecGroup
        - MsgLeaveGroup
        - MsgSoftwareUpgrade
        - MsgCancelUpgrade
        - MsgRegisterInterchainAccount
        - MsgSendTx
        - MsgRegisterPayee
        - MsgRegisterCounterpartyPayee
        - MsgPayPacketFee
        - MsgPayPacketFeeAsync
        - MsgTransfer
        - MsgCreateClient
        - MsgUpdateClient
        - MsgUpgradeClient
        - MsgSubmitMisbehaviour
        - MsgConnectionOpenInit
        - MsgConnectionOpenTry
        - MsgConnectionOpenAck
        - MsgConnectionOpenConfirm
        - MsgChannelOpenInit
        - MsgChannelOpenTry
        - MsgChannelOpenAck
        - MsgChannelOpenConfirm
        - MsgChannelCloseInit
        - MsgChannelCloseConfirm
        - MsgRecvPacket
        - MsgTimeout
        - MsgTimeoutOnClose
        - MsgAcknowledgement
        in: query
        name: msg_type
        type: string
      - description: Time from in unix timestamp
        in: query
        minimum: 1
        name: from
        type: integer
      - description: Time to in unix timestamp
        in: query
        minimum: 1
        name: to
        type: integer
      - description: Block number
        in: query
        minimum: 1
        name: height
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Tx'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get address transactions
      tags:
      - address
  /v1/address/count:
    get:
      description: Get count of addresses in network
      operationId: get-address-count
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get count of addresses in network
      tags:
      - address
  /v1/blob:
    post:
      consumes:
      - application/json
      description: Returns blob
      operationId: get-blob
      parameters:
      - description: Base64-encoded namespace id and version
        in: body
        name: hash
        required: true
        schema:
          type: string
      - description: Block heigth
        in: body
        minimum: 1
        name: height
        required: true
        schema:
          type: integer
      - description: Blob commitment
        in: body
        name: commitment
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Blob'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get namespace blob by commitment on height
      tags:
      - namespace
  /v1/block:
    get:
      description: List blocks info
      operationId: list-block
      parameters:
      - description: Count of requested entities
        in: query
        maximum: 100
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Sort order
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      - description: Need join stats for block
        in: query
        name: stats
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Block'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: List blocks info
      tags:
      - block
  /v1/block/{height}:
    get:
      description: Get block info
      operationId: get-block
      parameters:
      - description: Block height
        in: path
        minimum: 1
        name: height
        required: true
        type: integer
      - description: Need join stats for block
        in: query
        name: stats
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Block'
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get block info
      tags:
      - block
  /v1/block/{height}/events:
    get:
      description: Get events from begin and end of block
      operationId: get-block-events
      parameters:
      - description: Block height
        in: path
        minimum: 1
        name: height
        required: true
        type: integer
      - description: Count of requested entities
        in: query
        maximum: 100
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Event'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get events from begin and end of block
      tags:
      - block
  /v1/block/{height}/messages:
    get:
      description: Get messages contained in the block
      operationId: get-block-messages
      parameters:
      - description: Block height
        in: path
        minimum: 1
        name: height
        required: true
        type: integer
      - description: Count of requested entities
        in: query
        maximum: 100
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Comma-separated message types list
        enum:
        - MsgUnknown
        - MsgSetWithdrawAddress
        - MsgWithdrawDelegatorReward
        - MsgWithdrawValidatorCommission
        - MsgFundCommunityPool
        - MsgCreateValidator
        - MsgEditValidator
        - MsgDelegate
        - MsgBeginRedelegate
        - MsgUndelegate
        - MsgCancelUnbondingDelegation
        - MsgUnjail
        - MsgSend
        - MsgMultiSend
        - MsgCreateVestingAccount
        - MsgCreatePermanentLockedAccount
        - MsgCreatePeriodicVestingAccount
        - MsgPayForBlobs
        - MsgGrant
        - MsgExec
        - MsgRevoke
        - MsgGrantAllowance
        - MsgRevokeAllowance
        - MsgRegisterEVMAddress
        - MsgSubmitProposal
        - MsgExecLegacyContent
        - MsgVote
        - MsgVoteWeighted
        - MsgDeposit
        - IBCTransfer
        - MsgVerifyInvariant
        - MsgSubmitEvidence
        - MsgSendNFT
        - MsgCreateGroup
        - MsgUpdateGroupMembers
        - MsgUpdateGroupAdmin
        - MsgUpdateGroupMetadata
        - MsgCreateGroupPolicy
        - MsgUpdateGroupPolicyAdmin
        - MsgCreateGroupWithPolicy
        - MsgUpdateGroupPolicyDecisionPolicy
        - MsgUpdateGroupPolicyMetadata
        - MsgSubmitProposalGroup
        - MsgWithdrawProposal
        - MsgVoteGroup
        - MsgExecGroup
        - MsgLeaveGroup
        - MsgSoftwareUpgrade
        - MsgCancelUpgrade
        - MsgRegisterInterchainAccount
        - MsgSendTx
        - MsgRegisterPayee
        - MsgRegisterCounterpartyPayee
        - MsgPayPacketFee
        - MsgPayPacketFeeAsync
        - MsgTransfer
        - MsgCreateClient
        - MsgUpdateClient
        - MsgUpgradeClient
        - MsgSubmitMisbehaviour
        - MsgConnectionOpenInit
        - MsgConnectionOpenTry
        - MsgConnectionOpenAck
        - MsgConnectionOpenConfirm
        - MsgChannelOpenInit
        - MsgChannelOpenTry
        - MsgChannelOpenAck
        - MsgChannelOpenConfirm
        - MsgChannelCloseInit
        - MsgChannelCloseConfirm
        - MsgRecvPacket
        - MsgTimeout
        - MsgTimeoutOnClose
        - MsgAcknowledgement
        in: query
        name: msg_type
        type: string
      - description: Comma-separated message types which should be excluded from list
        enum:
        - MsgUnknown
        - MsgSetWithdrawAddress
        - MsgWithdrawDelegatorReward
        - MsgWithdrawValidatorCommission
        - MsgFundCommunityPool
        - MsgCreateValidator
        - MsgEditValidator
        - MsgDelegate
        - MsgBeginRedelegate
        - MsgUndelegate
        - MsgCancelUnbondingDelegation
        - MsgUnjail
        - MsgSend
        - MsgMultiSend
        - MsgCreateVestingAccount
        - MsgCreatePermanentLockedAccount
        - MsgCreatePeriodicVestingAccount
        - MsgPayForBlobs
        - MsgGrant
        - MsgExec
        - MsgRevoke
        - MsgGrantAllowance
        - MsgRevokeAllowance
        - MsgRegisterEVMAddress
        - MsgSubmitProposal
        - MsgExecLegacyContent
        - MsgVote
        - MsgVoteWeighted
        - MsgDeposit
        - IBCTransfer
        - MsgVerifyInvariant
        - MsgSubmitEvidence
        - MsgSendNFT
        - MsgCreateGroup
        - MsgUpdateGroupMembers
        - MsgUpdateGroupAdmin
        - MsgUpdateGroupMetadata
        - MsgCreateGroupPolicy
        - MsgUpdateGroupPolicyAdmin
        - MsgCreateGroupWithPolicy
        - MsgUpdateGroupPolicyDecisionPolicy
        - MsgUpdateGroupPolicyMetadata
        - MsgSubmitProposalGroup
        - MsgWithdrawProposal
        - MsgVoteGroup
        - MsgExecGroup
        - MsgLeaveGroup
        - MsgSoftwareUpgrade
        - MsgCancelUpgrade
        - MsgRegisterInterchainAccount
        - MsgSendTx
        - MsgRegisterPayee
        - MsgRegisterCounterpartyPayee
        - MsgPayPacketFee
        - MsgPayPacketFeeAsync
        - MsgTransfer
        - MsgCreateClient
        - MsgUpdateClient
        - MsgUpgradeClient
        - MsgSubmitMisbehaviour
        - MsgConnectionOpenInit
        - MsgConnectionOpenTry
        - MsgConnectionOpenAck
        - MsgConnectionOpenConfirm
        - MsgChannelOpenInit
        - MsgChannelOpenTry
        - MsgChannelOpenAck
        - MsgChannelOpenConfirm
        - MsgChannelCloseInit
        - MsgChannelCloseConfirm
        - MsgRecvPacket
        - MsgTimeout
        - MsgTimeoutOnClose
        - MsgAcknowledgement
        in: query
        name: excluded_msg_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Message'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get messages contained in the block
      tags:
      - block
  /v1/block/{height}/namespace:
    get:
      description: Get namespaces affected in the block
      operationId: get-block-namespaces
      parameters:
      - description: Block height
        in: path
        minimum: 1
        name: height
        required: true
        type: integer
      - description: Count of requested entities
        in: query
        maximum: 100
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.NamespaceMessage'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get namespaces affected in the block
      tags:
      - block
  /v1/block/{height}/namespace/count:
    get:
      description: Get count of affected in the block namespaces
      operationId: get-block-namespaces-count
      parameters:
      - description: Block height
        in: path
        minimum: 1
        name: height
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get count of affected in the block namespaces
      tags:
      - block
  /v1/block/{height}/stats:
    get:
      description: Get block stats by height
      operationId: get-block-stats
      parameters:
      - description: Block height
        in: path
        minimum: 1
        name: height
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.BlockStats'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get block stats by height
      tags:
      - block
  /v1/block/count:
    get:
      description: Get count of blocks in network
      operationId: get-block-count
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get count of blocks in network
      tags:
      - block
  /v1/constants:
    get:
      description: Get network constants
      operationId: get-constants
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Constants'
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get network constants
      tags:
      - general
  /v1/enums:
    get:
      description: Get celenium enumerators
      operationId: get-enums
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Enums'
      summary: Get celenium enumerators
      tags:
      - general
  /v1/gas/estimate_for_pfb:
    get:
      description: Get estimated gas for pay for blob message with certain values
        of blob sizes
      operationId: gas-estimate-for-pfb
      parameters:
      - description: Comma-separated array of blob sizes
        in: query
        name: sizes
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get estimated gas for pay for blob
      tags:
      - gas
  /v1/gas/price:
    get:
      description: Get estimated gas price based on historical data
      operationId: gas-price
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GasPrice'
      summary: Get estimated gas price
      tags:
      - gas
  /v1/head:
    get:
      description: Get current indexer head
      operationId: head
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.State'
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get current indexer head
      tags:
      - general
  /v1/namespace:
    get:
      description: List namespace info
      operationId: list-namespace
      parameters:
      - description: Count of requested entities
        in: query
        maximum: 100
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: 'Sort order. Default: desc'
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      - description: Sort field. If it's empty internal id is used
        enum:
        - time
        - pfb_count
        - size
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Namespace'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: List namespace info
      tags:
      - namespace
  /v1/namespace/{id}:
    get:
      description: Returns array of namespace versions
      operationId: get-namespace
      parameters:
      - description: Namespace id in hexadecimal
        in: path
        maxLength: 56
        minLength: 56
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Namespace'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get namespace info
      tags:
      - namespace
  /v1/namespace/{id}/{version}:
    get:
      description: Returns namespace by version byte and namespace id
      operationId: get-namespace-by-version-and-id
      parameters:
      - description: Namespace id in hexadecimal
        in: path
        maxLength: 56
        minLength: 56
        name: id
        required: true
        type: string
      - description: Version of namespace
        in: path
        name: version
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Namespace'
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get namespace info by id and version
      tags:
      - namespace
  /v1/namespace/{id}/{version}/blobs:
    get:
      description: Returns blob changes for namespace
      operationId: get-blob-logs
      parameters:
      - description: Namespace id in hexadecimal
        in: path
        maxLength: 56
        minLength: 56
        name: id
        required: true
        type: string
      - description: Version of namespace
        in: path
        name: version
        required: true
        type: integer
      - description: Count of requested entities
        in: query
        maximum: 100
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: 'Sort order. Default: desc'
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      - description: Sort field. If it's empty internal id is used
        enum:
        - time
        - size
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.BlobLog'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get blob changes for namespace
      tags:
      - namespace
  /v1/namespace/{id}/{version}/messages:
    get:
      description: Returns namespace messages by version byte and namespace id
      operationId: get-namespace-messages
      parameters:
      - description: Namespace id in hexadecimal
        in: path
        maxLength: 56
        minLength: 56
        name: id
        required: true
        type: string
      - description: Version of namespace
        in: path
        name: version
        required: true
        type: integer
      - description: Count of requested entities
        in: query
        maximum: 100
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.NamespaceMessage'
            type: array
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get namespace messages by id and version
      tags:
      - namespace
  /v1/namespace/active:
    get:
      description: Get last used namespace
      operationId: get-namespace-active
      parameters:
      - description: 'Sort field. Default: time'
        enum:
        - time
        - pfb_count
        - size
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Namespace'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get last used namespace
      tags:
      - namespace
  /v1/namespace/count:
    get:
      description: Get count of namespaces in network
      operationId: get-namespace-count
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get count of namespaces in network
      tags:
      - namespace
  /v1/namespace_by_hash/{hash}:
    get:
      description: Returns namespace by base64 encoded identity
      operationId: get-namespace-base64
      parameters:
      - description: Base64-encoded namespace id and version
        in: path
        name: hash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Namespace'
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get namespace info by base64
      tags:
      - namespace
  /v1/namespace_by_hash/{hash}/{height}:
    get:
      description: Returns blobs
      operationId: get-namespace-blobs
      parameters:
      - description: Base64-encoded namespace id and version
        in: path
        name: hash
        required: true
        type: string
      - description: Block heigth
        in: path
        minimum: 1
        name: height
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Blob'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get namespace blobs on height
      tags:
      - namespace
  /v1/rollup:
    get:
      description: List rollups info
      operationId: list-rollup
      parameters:
      - description: Count of requested entities
        in: query
        maximum: 100
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: 'Sort order. Default: desc'
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      - description: 'Sort field. Default: size'
        enum:
        - time
        - blobs_count
        - size
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.RollupWithStats'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: List rollups info
      tags:
      - rollup
  /v1/rollup/{id}:
    get:
      description: Get rollup info
      operationId: get-rollup
      parameters:
      - description: Internal identity
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Rollup'
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get rollup info
      tags:
      - rollup
  /v1/rollup/{id}/blobs:
    get:
      description: Get rollup blobs
      operationId: get-rollup-blobs
      parameters:
      - description: Internal identity
        in: path
        name: id
        required: true
        type: integer
      - description: Count of requested entities
        in: query
        maximum: 100
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: 'Sort order. Default: desc'
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      - description: Sort field. If it's empty internal id is used
        enum:
        - time
        - size
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.BlobLog'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get rollup blobs
      tags:
      - rollup
  /v1/rollup/{id}/namespaces:
    get:
      description: Get rollup namespaces info
      operationId: get-rollup-namespaces
      parameters:
      - description: Internal identity
        in: path
        name: id
        required: true
        type: integer
      - description: Count of requested entities
        in: query
        maximum: 100
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Namespace'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get rollup namespaces info
      tags:
      - rollup
  /v1/rollup/{id}/stats/{name}/{timeframe}:
    get:
      description: Get rollup stats
      operationId: get-rollup-stats
      parameters:
      - description: Internal identity
        in: path
        name: id
        required: true
        type: integer
      - description: Series name
        enum:
        - blobs_count
        - size
        in: path
        name: name
        required: true
        type: string
      - description: Timeframe
        enum:
        - hour
        - day
        - month
        in: path
        name: timeframe
        required: true
        type: string
      - description: Time from in unix timestamp
        in: query
        name: from
        type: integer
      - description: Time to in unix timestamp
        in: query
        name: to
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.HistogramItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get rollup stats
      tags:
      - rollup
  /v1/search:
    get:
      description: "Endpoint finds entity by hash (block, address, namespace and tx)\n\n###
        Block\n\nBlock will be found by its hash. Hash example: `652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF`.\nHash
        should be hexadecimal and has a length of 64.\n\n#### Example response \n\n```json\n{\n
        \   \"type\": \"block\",\n    \"result\": {\n        \"id\": 1,\n        \"hash\":
        \"652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF\",\n        //
        ... rest fields from response.Block type\n    }\n}\n```\n\n### Tx\n\nTx will
        be found by its hash. Hash example: `652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF`.\nTx
        should be hexadecimal and has a length of 64.\n\n#### Example response \n\n```json\n{\n
        \   \"type\": \"tx\",\n    \"result\": {\n        \"id\": 1,\n        \"hash\":
        \"652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF\",\n        //
        ... rest fields from response.Tx type\n    }\n}\n```\n\n### Address\n\nThe
        Address will be found by its hash.\nHash example: `celestia1jc92qdnty48pafummfr8ava2tjtuhfdw774w60`.\nAddress
        has prefix `celestia` and has length 47.\nAlso, it should be decoded by `bech32`.\n\n####
        Example response \n\n```json\n{\n    \"type\": \"address\",\n    \"result\":
        {\n        \"id\": 1,\n        \"hash\": \"celestia1jc92qdnty48pafummfr8ava2tjtuhfdw774w60\",\n
        \       \"height\": 100,\n        \"balance\": \"6525472354\"\n    }\n}\n```\n\n###
        Namespace\n\nNamespace can be found by base64 hash and identity pair version
        + namespace id. \nHash example: `U3dhZ2dlciByb2Nrcw==`. \nIdentity pair example:
        `014723ce10b187716adfc55ff7e6d9179c226e6b5440b02577cca49d02`\n\n#### Example
        response \n\n```json\n{\n    \"type\": \"namespace\",\n    \"result\": {\n
        \       \"id\": 1,\n        \"hash\": \"U3dhZ2dlciByb2Nrcw==\",\n        \"version\":
        1,\n        \"namespace_id\": \"4723ce10b187716adfc55ff7e6d9179c226e6b5440b02577cca49d02\"\n
        \       // ... rest fields from response.Namespace type\n    }\n}\n```\n"
      operationId: search
      parameters:
      - description: Search string
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SearchResponse-responses_Searchable'
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Search by hash
      tags:
      - search
  /v1/stats/histogram/{table}/{function}/{timeframe}:
    get:
      description: |-
        Returns histogram by table, function and timeframe

        ### Parameters

        `table`, `function` and `column` parameters are the same as summary endpoint.


        ### Timeframe

        * `hour`
        * `day`
        * `week`
        * `month`
        * `year`
      operationId: stats-histogram
      parameters:
      - description: Table name
        enum:
        - block
        - block_stats
        - tx
        - event
        - message
        in: path
        name: table
        required: true
        type: string
      - description: Function name
        enum:
        - min
        - max
        - avg
        - sum
        - count
        in: path
        name: function
        required: true
        type: string
      - description: Timeframe
        enum:
        - hour
        - day
        - week
        - month
        - year
        in: path
        name: timeframe
        required: true
        type: string
      - description: Column name which will be used for computation. Optional for
          count
        in: query
        name: column
        type: string
      - description: Time from in unix timestamp
        in: query
        name: from
        type: integer
      - description: Time to in unix timestamp
        in: query
        name: to
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.HistogramItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get histogram
      tags:
      - stats
  /v1/stats/namespace/series/{id}/{name}/{timeframe}:
    get:
      description: Get histogram for namespace with precomputed stats by series name
        and timeframe
      operationId: stats-ns-series
      parameters:
      - description: Namespace id in hexadecimal
        in: path
        maxLength: 56
        minLength: 56
        name: id
        required: true
        type: string
      - description: Timeframe
        enum:
        - hour
        - day
        - week
        - month
        - year
        in: path
        name: timeframe
        required: true
        type: string
      - description: Series name
        enum:
        - pfb_count
        - size
        in: path
        name: name
        required: true
        type: string
      - description: Time from in unix timestamp
        in: query
        name: from
        type: integer
      - description: Time to in unix timestamp
        in: query
        name: to
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.SeriesItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get histogram for namespace with precomputed stats
      tags:
      - stats
  /v1/stats/namespace/usage:
    get:
      description: Get namespaces with sorting by size. Returns top 100 namespaces.
        Namespaces which is not included to top 100 grouped into 'others' item
      operationId: stats-namespace-usage
      parameters:
      - description: Count of entities
        in: query
        maximum: 100
        name: top
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.NamespaceUsage'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get namespaces with sorting by size.
      tags:
      - stats
  /v1/stats/price/current:
    get:
      description: Get current TIA price
      operationId: stats-price-current
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Price'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get current TIA price
      tags:
      - stats
  /v1/stats/price/series/{timeframe}:
    get:
      description: Get histogram with TIA price
      operationId: stats-price-series
      parameters:
      - description: Timeframe
        enum:
        - 1m
        - 1h
        - 1d
        in: path
        name: timeframe
        required: true
        type: string
      - description: Time from in unix timestamp
        in: query
        name: from
        type: integer
      - description: Time to in unix timestamp
        in: query
        name: to
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Price'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get histogram with TIA price
      tags:
      - stats
  /v1/stats/series/{name}/{timeframe}:
    get:
      description: Get histogram with precomputed stats by series name and timeframe
      operationId: stats-series
      parameters:
      - description: Timeframe
        enum:
        - hour
        - day
        - week
        - month
        - year
        in: path
        name: timeframe
        required: true
        type: string
      - description: Series name
        enum:
        - blobs_size
        - tps
        - bps
        - fee
        - supply_change
        - block_time
        - tx_count
        - events_count
        - gas_price
        - gas_efficiency
        - gas_used
        - gas_limit
        in: path
        name: name
        required: true
        type: string
      - description: Time from in unix timestamp
        in: query
        name: from
        type: integer
      - description: Time to in unix timestamp
        in: query
        name: to
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.SeriesItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get histogram with precomputed stats
      tags:
      - stats
  /v1/stats/summary/{table}/{function}:
    get:
      description: |-
        Returns string value by passed table and function.

        ### Availiable tables
        * `block`
        * `block_stats`
        * `tx`
        * `message`
        * `event`


        ### Availiable functions
        * `sum`
        * `min`
        * `max`
        * `avg`
        * `count`


        `Column` query parameter is required for functions `sum`, `min`, `max` and `avg` and should not pass for `count`.


        ###  Availiable columns and functions for tables:

        #### Block
        * `height`         -- min max
        * `time`           -- min max

        #### Block stats
        * `height`         -- min max
        * `time`           -- min max
        * `tx_count`       -- min max sum avg
        * `events_count`   -- min max sum avg
        * `blobs_size`     -- min max sum avg
        * `block_time`     -- min max sum avg
        * `supply_chnge`   -- min max sum avg
        * `inflation_rate` -- min max avg
        * `fee`            -- min max sum avg

        #### Tx
        * `height`         -- min max
        * `time`           -- min max
        * `gas_wanted`     -- min max sum avg
        * `gas_used`       -- min max sum avg
        * `timeout_height` -- min max avg
        * `events_count`   -- min max sum avg
        * `messages_count` -- min max sum avg
        * `fee`            -- min max sum avg

        #### Event
        * `height`         -- min max
        * `time`           -- min max

        #### Message
        * `height`         -- min max
        * `time`           -- min max
      operationId: stats-summary
      parameters:
      - description: Table name
        enum:
        - block
        - block_stats
        - tx
        - event
        - message
        - validator
        in: path
        name: table
        required: true
        type: string
      - description: Function name
        enum:
        - min
        - max
        - avg
        - sum
        - count
        in: path
        name: function
        required: true
        type: string
      - description: Column name which will be used for computation. Optional for
          count.
        in: query
        name: column
        type: string
      - description: Time from in unix timestamp
        in: query
        name: from
        type: integer
      - description: Time to in unix timestamp
        in: query
        name: to
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get value by table and function
      tags:
      - stats
  /v1/stats/tps:
    get:
      description: Returns transaction per seconds statistics
      operationId: stats-tps
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.TPS'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get tps
      tags:
      - stats
  /v1/stats/tx_count_24h:
    get:
      description: Get tx count histogram for last 24 hours by hour
      operationId: stats-tx-count-24h
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.TxCountHistogramItem'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get tx count histogram for last 24 hours by hour
      tags:
      - stats
  /v1/tx:
    get:
      description: List transactions info
      operationId: list-transactions
      parameters:
      - description: Count of requested entities
        in: query
        maximum: 100
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Sort order
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      - description: Comma-separated status list
        enum:
        - success
        - failed
        in: query
        name: status
        type: string
      - description: Comma-separated message types list
        enum:
        - MsgUnknown
        - MsgSetWithdrawAddress
        - MsgWithdrawDelegatorReward
        - MsgWithdrawValidatorCommission
        - MsgFundCommunityPool
        - MsgCreateValidator
        - MsgEditValidator
        - MsgDelegate
        - MsgBeginRedelegate
        - MsgUndelegate
        - MsgCancelUnbondingDelegation
        - MsgUnjail
        - MsgSend
        - MsgMultiSend
        - MsgCreateVestingAccount
        - MsgCreatePermanentLockedAccount
        - MsgCreatePeriodicVestingAccount
        - MsgPayForBlobs
        - MsgGrant
        - MsgExec
        - MsgRevoke
        - MsgGrantAllowance
        - MsgRevokeAllowance
        - MsgRegisterEVMAddress
        - MsgSubmitProposal
        - MsgExecLegacyContent
        - MsgVote
        - MsgVoteWeighted
        - MsgDeposit
        - IBCTransfer
        - MsgVerifyInvariant
        - MsgSubmitEvidence
        - MsgSendNFT
        - MsgCreateGroup
        - MsgUpdateGroupMembers
        - MsgUpdateGroupAdmin
        - MsgUpdateGroupMetadata
        - MsgCreateGroupPolicy
        - MsgUpdateGroupPolicyAdmin
        - MsgCreateGroupWithPolicy
        - MsgUpdateGroupPolicyDecisionPolicy
        - MsgUpdateGroupPolicyMetadata
        - MsgSubmitProposalGroup
        - MsgWithdrawProposal
        - MsgVoteGroup
        - MsgExecGroup
        - MsgLeaveGroup
        - MsgSoftwareUpgrade
        - MsgCancelUpgrade
        - MsgRegisterInterchainAccount
        - MsgSendTx
        - MsgRegisterPayee
        - MsgRegisterCounterpartyPayee
        - MsgPayPacketFee
        - MsgPayPacketFeeAsync
        - MsgTransfer
        - MsgCreateClient
        - MsgUpdateClient
        - MsgUpgradeClient
        - MsgSubmitMisbehaviour
        - MsgConnectionOpenInit
        - MsgConnectionOpenTry
        - MsgConnectionOpenAck
        - MsgConnectionOpenConfirm
        - MsgChannelOpenInit
        - MsgChannelOpenTry
        - MsgChannelOpenAck
        - MsgChannelOpenConfirm
        - MsgChannelCloseInit
        - MsgChannelCloseConfirm
        - MsgRecvPacket
        - MsgTimeout
        - MsgTimeoutOnClose
        - MsgAcknowledgement
        in: query
        name: msg_type
        type: string
      - description: Comma-separated message types list which should be excluded
        enum:
        - MsgUnknown
        - MsgSetWithdrawAddress
        - MsgWithdrawDelegatorReward
        - MsgWithdrawValidatorCommission
        - MsgFundCommunityPool
        - MsgCreateValidator
        - MsgEditValidator
        - MsgDelegate
        - MsgBeginRedelegate
        - MsgUndelegate
        - MsgCancelUnbondingDelegation
        - MsgUnjail
        - MsgSend
        - MsgMultiSend
        - MsgCreateVestingAccount
        - MsgCreatePermanentLockedAccount
        - MsgCreatePeriodicVestingAccount
        - MsgPayForBlobs
        - MsgGrant
        - MsgExec
        - MsgRevoke
        - MsgGrantAllowance
        - MsgRevokeAllowance
        - MsgRegisterEVMAddress
        - MsgSubmitProposal
        - MsgExecLegacyContent
        - MsgVote
        - MsgVoteWeighted
        - MsgDeposit
        - IBCTransfer
        - MsgVerifyInvariant
        - MsgSubmitEvidence
        - MsgSendNFT
        - MsgCreateGroup
        - MsgUpdateGroupMembers
        - MsgUpdateGroupAdmin
        - MsgUpdateGroupMetadata
        - MsgCreateGroupPolicy
        - MsgUpdateGroupPolicyAdmin
        - MsgCreateGroupWithPolicy
        - MsgUpdateGroupPolicyDecisionPolicy
        - MsgUpdateGroupPolicyMetadata
        - MsgSubmitProposalGroup
        - MsgWithdrawProposal
        - MsgVoteGroup
        - MsgExecGroup
        - MsgLeaveGroup
        - MsgSoftwareUpgrade
        - MsgCancelUpgrade
        - MsgRegisterInterchainAccount
        - MsgSendTx
        - MsgRegisterPayee
        - MsgRegisterCounterpartyPayee
        - MsgPayPacketFee
        - MsgPayPacketFeeAsync
        - MsgTransfer
        - MsgCreateClient
        - MsgUpdateClient
        - MsgUpgradeClient
        - MsgSubmitMisbehaviour
        - MsgConnectionOpenInit
        - MsgConnectionOpenTry
        - MsgConnectionOpenAck
        - MsgConnectionOpenConfirm
        - MsgChannelOpenInit
        - MsgChannelOpenTry
        - MsgChannelOpenAck
        - MsgChannelOpenConfirm
        - MsgChannelCloseInit
        - MsgChannelCloseConfirm
        - MsgRecvPacket
        - MsgTimeout
        - MsgTimeoutOnClose
        - MsgAcknowledgement
        in: query
        name: excluded_msg_type
        type: string
      - description: Time from in unix timestamp
        in: query
        name: from
        type: integer
      - description: Time to in unix timestamp
        in: query
        name: to
        type: integer
      - description: Block number
        in: query
        name: height
        type: integer
      - description: If true join messages
        in: query
        name: messages
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Tx'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: List transactions info
      tags:
      - transactions
  /v1/tx/{hash}:
    get:
      description: Get transaction by hash
      operationId: get-transaction
      parameters:
      - description: Transaction hash in hexadecimal
        in: path
        maxLength: 64
        minLength: 64
        name: hash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Tx'
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get transaction by hash
      tags:
      - transactions
  /v1/tx/{hash}/events:
    get:
      description: Get transaction events
      operationId: get-transaction-events
      parameters:
      - description: Transaction hash in hexadecimal
        in: path
        maxLength: 64
        minLength: 64
        name: hash
        required: true
        type: string
      - description: Count of requested entities
        in: query
        maximum: 100
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Event'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get transaction events
      tags:
      - transactions
  /v1/tx/{hash}/messages:
    get:
      description: Get transaction messages
      operationId: get-transaction-messages
      parameters:
      - description: Transaction hash in hexadecimal
        in: path
        maxLength: 64
        minLength: 64
        name: hash
        required: true
        type: string
      - description: Count of requested entities
        in: query
        maximum: 100
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Message'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get transaction messages
      tags:
      - transactions
  /v1/tx/{hash}/namespace:
    get:
      description: List namespaces affected by transaction
      operationId: list-namespaces-transactions
      parameters:
      - description: Transaction hash in hexadecimal
        in: path
        maxLength: 64
        minLength: 64
        name: hash
        required: true
        type: string
      - description: Count of requested entities
        in: query
        maximum: 100
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.NamespaceMessage'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: List namespaces affected by transaction
      tags:
      - transactions
  /v1/tx/{hash}/namespace/count:
    get:
      description: Count of namespaces affected by transaction
      operationId: list-namespaces-count-transactions
      parameters:
      - description: Transaction hash in hexadecimal
        in: path
        maxLength: 64
        minLength: 64
        name: hash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Count of namespaces affected by transaction
      tags:
      - transactions
  /v1/tx/count:
    get:
      description: Get count of transactions in network
      operationId: get-transactions-count
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get count of transactions in network
      tags:
      - transactions
  /v1/tx/genesis:
    get:
      description: List genesis transactions info
      operationId: list-genesis-transactions
      parameters:
      - description: Count of requested entities
        in: query
        maximum: 100
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Sort order
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Tx'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: List genesis transactions info
      tags:
      - transactions
  /v1/validators:
    get:
      description: List validators
      operationId: list-validator
      parameters:
      - description: Count of requested entities
        in: query
        maximum: 100
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Sort order
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Validator'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: List validators
      tags:
      - validator
  /v1/validators/{id}:
    get:
      description: Get validator info
      operationId: get-validator
      parameters:
      - description: Internal validator id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Validator'
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get validator info
      tags:
      - validator
  /v1/ws:
    get:
      description: |
        ## Documentation for websocket API

        ### Subscribe

        To receive updates from websocket API send `subscribe` request to server.

        ```json
        {
            "method": "subscribe",
            "body": {
                "channel": "<CHANNEL_NAME>",
                "filters": {
                    // pass channel filters
                }
            }
        }
        ```

        Now 2 channels are supported:

        * `head` - receive information about new block. Channel does not have any filters. Subscribe message should looks like:

        ```json
        {
            "method": "subscribe",
            "body": {
                "channel": "head"
            }
        }
        ```

        In that channel messages of `responses.Block` type will be sent.

        * `tx` - receive information about new transactions. The channel has filters for target receiving information. Now 2 filters are supported:

        ```json
        {
            "method": "subscribe",
            "body": {
                "channel": "tx",
                "filters": {
                    "status": [  // array of transaction status. Can be emtpy.
                        types.Status
                    ],
                    "msg_type": [  // array of containing message types status. Can be emtpy.
                        types.MsgType
                    ]
                }
            }
        }
        ```

        If all filers are empty subscription to all transaction will be created.

        In that channel messages of `responses.Tx` type will be sent.


        ### Unsubscribe

        To unsubscribe send `unsubscribe` message containing one of channel name describing above.


        ```json
        {
            "method": "unsubscribe",
            "body": {
                "channel": "<CHANNEL_NAME>",
            }
        }
        ```
      operationId: websocket
      produces:
      - application/json
      responses: {}
      summary: Websocket API
      tags:
      - websocket
swagger: "2.0"
